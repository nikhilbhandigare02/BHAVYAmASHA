import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:medixcel_new/core/widgets/AppHeader/AppHeader.dart';
import 'package:medixcel_new/l10n/app_localizations.dart';

class Misreport extends StatefulWidget {
  const Misreport({super.key});

  @override
  State<Misreport> createState() => _MisreportState();
}

class _MisreportState extends State<Misreport> {
  final List<String> _months = const [
    'January', 'February', 'March', 'April', 'May', 'June',
    'July', 'August', 'September', 'October', 'November', 'December'
  ];

  late String _selectedMonth;

  int pregnantWomen = 3;
  int newborns = 0;
  int abhaGenerated = 0;
  int abhaFetched = 0;

  @override
  void initState() {
    super.initState();
    final now = DateTime.now();
    _selectedMonth = _months[now.month - 1];
  }

  @override
  Widget build(BuildContext context) {
    final l10n = AppLocalizations.of(context);
    final monthNames = [
      l10n?.monthJanuary ?? 'January',
      l10n?.monthFebruary ?? 'February',
      l10n?.monthMarch ?? 'March',
      l10n?.monthApril ?? 'April',
      l10n?.monthMay ?? 'May',
      l10n?.monthJune ?? 'June',
      l10n?.monthJuly ?? 'July',
      l10n?.monthAugust ?? 'August',
      l10n?.monthSeptember ?? 'September',
      l10n?.monthOctober ?? 'October',
      l10n?.monthNovember ?? 'November',
      l10n?.monthDecember ?? 'December',
    ];
    final displayMonth = monthNames[DateTime.now().month - 1];
    return Scaffold(
      backgroundColor: Theme.of(context).colorScheme.surface,
      appBar: AppHeader(screenTitle: l10n?.drawerMisReport ?? 'MIS Report', showBack: true,),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Card(
              elevation: 2,
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(4)),
              child: Container(
                width: double.infinity,
                decoration: BoxDecoration(
                  color: Theme.of(context).colorScheme.surface,
                  borderRadius: BorderRadius.circular(6),
                ),
                padding: const EdgeInsets.symmetric(horizontal: 14, vertical: 14),
                child: Row(
                  children: [
                    Text(
                      l10n?.misMonthLabel ?? 'Month : ',
                      style: TextStyle(
                        color: Theme.of(context).colorScheme.onSurfaceVariant,
                        fontWeight: FontWeight.w600,
                      ),
                    ),
                    Text(
                      displayMonth,
                      style: TextStyle(
                        color: Theme.of(context).colorScheme.onSurface,
                        fontWeight: FontWeight.w600,
                      ),
                    ),
                  ],
                ),
              ),
            ),

            const SizedBox(height: 16),

            // Stats rows
            _statRow(l10n?.misStatPregnantWomen ?? 'Number of total Pregnant Women :', pregnantWomen.toString()),
            const SizedBox(height: 10),
            _statRow(l10n?.misStatNewborns ?? 'Total number of newborns :', newborns.toString()),
            const SizedBox(height: 10),
            _statRow(l10n?.misStatAbhaGenerated ?? 'Total number of ABHA generated by user :', abhaGenerated.toString()),
            const SizedBox(height: 10),
            _statRow(l10n?.misStatAbhaFetched ?? 'Total number of Exisiting ABHA fetched by user :', abhaFetched.toString()),
          ],
        ),
      ),
    );
  }

  Widget _statRow(String label, String value) {
    return Row(
      children: [
        Expanded(
          child: Text(
            label,
            style: TextStyle(fontSize: 16, color: Theme.of(context).colorScheme.onSurface),
          ),
        ),
        Text(
          value,
          style: TextStyle(fontSize: 16, color: Theme.of(context).colorScheme.onSurface),
        ),
      ],
    );
  }
}
